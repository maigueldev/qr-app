---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
---

<Layout title="QR Generator">
	<main>
		<h1>Genera tus c√≥digos <span class="text-gradient">QR</span></h1>
		<p class="instructions">
			Puedes generarlos de forma individual o de forma masiva subiendo un archivo en formato xlsx.
		</p>

		<div class="link-card-grid">
			<div class="element-grid">
				<div class="element-grid__form-preview">
					<div class="element-grid__form">
						<div class="content--inputs">
							<label for="content">Enlace o contenido</label>
							<input type="text" id="content" placeholder="https://example.org" value="https://encuesta.com"/>
						</div>
						<div class="content--inputs">
							<label for="content--width">
								Ancho
								<div class="tooltip">i
									<span class="tooltiptext">Max: 1000</span>
							  	</div>
							</label>
							<input type="number" min="10" max="1000" id="content--width" value="150" pattern="[0-9]"/>
						</div>
						<div class="content--inputs">
							<label for="content--height">
								Alto
								<div class="tooltip">i
									<span class="tooltiptext">Max: 1000</span>
							  	</div>
							</label>
							<input type="number" min="10" max="1000" id="content--height" value="150" pattern="[0-9]"/>
						</div>
					</div>

					<div class="qr-result">
						<img src="" alt="QR Code" />
					</div>
				</div>

				<button id="generate">Generar</button>
			</div>
		</div>
	</main>
</Layout>

<script>
	const url_api = 'https://api.qrserver.com/v1/create-qr-code/';
	const content = document.getElementById('content');
	const content_width = document.getElementById('content--width');
	const content_height = document.getElementById('content--height');
	const generate = document.getElementById('generate');
	const qrResult = document.querySelector('.qr-result img');

	generate.addEventListener('click', () => {
		const str_content = content.value;
		const str_width = content_width.value;
		const str_height = content_height.value;

		if (str_content) {
			const encodedContent = encodeURIComponent(str_content);
			qrResult.src = `${url_api}?size=${str_width}x${str_height}&data=${encodedContent}`;
			console.log(qrResult.src)

			qrResult.style.visibility = 'visible';
		}
	});
</script>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: 100%;
		gap: 2rem;
		padding: 0;
	}
	.element-grid {
		display: grid;
		gap: 1rem;
	}

	.element-grid__form-preview {
		display: flex;
		justify-content: space-between;
		align-items: stretch;
		gap: 2rem;
	}

	.qr-result {
		display: flex;
		justify-content: center;
		flex: 1;
	}

	.qr-result img {
		max-width: 100%;
		max-height: 100%;
		object-fit: contain;
	}
	.element-grid__form {
		display: flex;
		flex-direction: column;
		flex: 1;
	}
	.content--inputs {
		margin-top: 0.5em;
		display: flex;
		flex-direction: column;
	}

	/* Tooltip */
	/* Estilo para el contenedor del tooltip */
	.tooltip {
		position: relative;
		display: inline-block;
		border-bottom: 1px dotted black; /* Si quieres un subrayado */
	}

	/* Estilo para el texto del tooltip */
	.tooltip .tooltiptext {
		visibility: hidden;
		width: 120px;
		background-color: #555;
		color: #fff;
		text-align: center;
		padding: 5px 0;
		border-radius: 6px;

		/* Posicionamiento */
		position: absolute;
		z-index: 1;
		bottom: 100%; /* Coloca el tooltip encima del texto */
		left: 50%;
		margin-left: -60px; /* Centra el tooltip */

		/* Efecto de desvanecimiento */
		opacity: 0;
		transition: opacity 0.3s;
	}

	/* Muestra el tooltip cuando se pasa el cursor sobre el contenedor del tooltip */
	.tooltip:hover .tooltiptext {
		visibility: visible;
		opacity: 1;
	}
</style>
